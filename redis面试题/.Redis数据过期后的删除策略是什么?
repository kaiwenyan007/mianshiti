在 Redis 6.0 版本中，当内存不足时，会使用主动删除键的淘汰策略。Redis 提供了多种内存淘汰策略来管理内存使用。以下是 Redis 6.0 中支持的内存淘汰策略：

### 1. **volatile-lru**
- 从设置了过期时间的键中，使用 LRU（Least Recently Used）算法淘汰键。
- 这种策略会优先删除最近最少使用的过期键。

### 2. **allkeys-lru**
- 从所有键中，使用 LRU 算法淘汰键。
- 这种策略会删除所有键中最近最少使用的键，无论其是否设置了过期时间。

### 3. **volatile-random**
- 从设置了过期时间的键中随机选择键进行删除。
- 这种策略简单随机，适合快速清理。

### 4. **allkeys-random**
- 从所有键中随机选择键进行删除。
- 适用于所有键，随机性更强。

### 5. **volatile-ttl**
- 从设置了过期时间的键中，选择过期时间最短的键进行删除。
- 这种策略确保最早到期的键优先被删除。

### 6. **noeviction**
- 不会主动删除任何键。在内存达到最大限制时，返回错误。
- 适合需要确保所有数据都被保留的场景，但可能导致写操作失败。

### 配置和使用

可以通过配置文件或命令设置 Redis 的内存限制和淘汰策略，例如：

```bash
CONFIG SET maxmemory 100mb
CONFIG SET maxmemory-policy allkeys-lru
```

### 总结

Redis 6.0 提供多种内存淘汰策略，允许用户根据实际需求选择合适的策略来管理内存不足的情况。通过合理配置，Redis 能够在高负载情况下保持性能并有效利用内存。
