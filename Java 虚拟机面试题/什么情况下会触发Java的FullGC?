Java 中的 Full GC 主要在以下情况下触发：

1. **老年代内存不足**：当老年代的可用内存不足以满足新对象的分配请求时，JVM 会触发 Full GC 来回收老年代的对象。

2. **显式调用**：调用 `System.gc()` 可以显式请求垃圾回收，尽管这并不保证会执行 Full GC。

3. **Metaspace 达到限制**（在 JDK 8 及以上）：当 Metaspace（用于存放类元数据的内存区域）达到设定的限制时，可能会触发 Full GC。

4. **大对象分配**：如果尝试分配一个超过老年代大小的大对象，而当前老年代的空间不足，则会触发 Full GC。

5. **JVM 参数配置**：某些 JVM 参数或监控条件可能会导致 Full GC 的触发。

Full GC 通常比 Minor GC 花费更多时间，因此减少 Full GC 的频率对性能优化至关重要。你想了解更多相关内容吗？
