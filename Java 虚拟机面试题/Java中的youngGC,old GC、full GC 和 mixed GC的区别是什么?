在 Java 中，垃圾回收有四种主要类型：Young GC、Old GC、Full GC 和 Mixed GC，各自的区别如下：

1. **Young GC**（Minor GC）：
   - 仅针对新生代进行回收，回收 Eden 区和一个 Survivor 区。
   - 目的是清理短命对象，通常执行速度快。

2. **Old GC**（Major GC）：
   - 主要针对老年代进行回收。
   - 触发条件通常是老年代内存不足，回收速度较慢，可能导致更长的停顿时间。

3. **Full GC**：
   - 同时回收整个堆，包括新生代和老年代。
   - 触发原因可能是显式调用 `System.gc()`、老年代内存不足或其他条件。
   - 通常是最耗时的垃圾回收类型。

4. **Mixed GC**：
   - 在 G1 垃圾收集器中出现，针对新生代和部分老年代进行回收。
   - 旨在优化性能，通过并行回收存活对象，减少停顿时间。

这些不同类型的垃圾回收策略帮助 Java 更有效地管理内存，确保应用性能。想进一步探讨某个类型吗？
