`LinkedHashMap`是Java中的一个集合类，它是`HashMap`的子类，结合了哈希表和链表的特点。它的主要特点包括：

1. **保持插入顺序**：与`HashMap`不同，`LinkedHashMap`会按照元素的插入顺序维护一个双向链表，这意味着在遍历时元素的顺序与插入顺序一致。

2. **哈希表的性能**：`LinkedHashMap`仍然具有`HashMap`的常数时间复杂度（O(1)）的基本操作性能，如插入、删除和查找。

3. **可选择访问顺序**：`LinkedHashMap`可以在创建时选择保持插入顺序或访问顺序。如果使用构造函数的`accessOrder`参数为`true`，则在访问（如get操作）元素时，元素会被移动到链表的末尾，从而实现“最近最常用”（LRU）的效果。

4. **适用场景**：`LinkedHashMap`适合用于需要保持元素顺序的场景，比如缓存实现、保留历史记录等。

整体而言，`LinkedHashMap`结合了哈希表的快速查找能力和链表的有序特性，提供了一种灵活的数据结构选择。
