JDK1.8对HashMap的改动主要包括：

1. **数组与链表的优化**：HashMap的内部结构由原来的数组加链表组合优化为数组加链表和红黑树组合，减少了在高碰撞情况下的查找时间。

2. **容量计算方式**：在扩容时，HashMap不再简单地按照容量乘以负载因子进行计算，而是直接将容量扩展到下一个2的幂，减少了空间的浪费。

3. **性能优化**：引入了新的`HashMap.Entry`结构，避免了在哈希冲突情况下创建新的对象，提升了内存效率和性能。

4. **迭代器改进**：增强了迭代器的设计，使得在遍历过程中对HashMap进行修改时能够避免ConcurrentModificationException，提高了并发访问的稳定性。

这些改动使得HashMap在性能和内存使用上更加高效。
