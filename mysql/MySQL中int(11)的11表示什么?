在 MySQL 中，`INT(11)` 中的 `11` 是指数字的显示宽度，而不是其存储大小或范围。以下是关于 `INT(11)` 的详细解释：

### 1. **显示宽度**

- **含义**：`INT(11)` 中的 `11` 指的是在使用 `ZEROFILL` 属性时，输出时的最小字符宽度。如果数值的位数少于 `11`，则在左侧用零填充到 `11` 位。
- **例子**：
  - 如果一个列的值是 `123`，并且使用了 `ZEROFILL`，查询结果将显示为 `0000000123`。
  - 如果没有使用 `ZEROFILL`，则只会显示 `123`。

### 2. **存储大小和范围**

- **存储大小**：`INT` 类型在 MySQL 中始终占用 4 个字节（32 位），无论指定的宽度是多少。
- **数值范围**：
  - 无符号（UNSIGNED）：`0` 到 `4294967295`
  - 有符号（SIGNED，默认）：`-2147483648` 到 `2147483647`

### 3. **影响**

- **无影响**：显示宽度只影响输出格式，不会影响数据的存储、计算或查询性能。即使你使用 `INT(11)`，它仍然只占用 4 字节，并能存储相同范围内的整数值。
- **不推荐使用**：在 MySQL 8.0 及更高版本中，显示宽度已被弃用，因此通常建议仅使用 `INT` 而不指定宽度。

### 总结

`INT(11)` 中的 `11` 只是一个显示宽度，与实际存储大小和数值范围无关。在设计数据库时，建议关注数据的类型和大小，而不是显示宽度。

8.0以后的版本，整数类型会忽略掉 字段宽度
