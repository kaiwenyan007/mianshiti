在 MySQL 中，`COUNT(*)`、`COUNT(1)` 和 `COUNT(字段名)` 都是用来计算结果集中行的数量，但它们的工作方式和返回的结果略有不同。以下是它们之间的主要区别：

### 1. COUNT(*)

- **定义**：计算结果集中的所有行数，包括 NULL 值和重复行。
- **特点**：
  - 这是最常用的计数方式。
  - 计算所有行，不管是否包含 NULL 值。
- **示例**：
  ```sql
  SELECT COUNT(*) FROM users;
  ```

### 2. COUNT(1)

- **定义**：计算结果集中的所有行数，通常也包括 NULL 值和重复行。这里的 `1` 被视为常量。
- **特点**：
  - 语义上与 `COUNT(*)` 相似，通常情况下，性能差异不大。
  - MySQL 处理 `COUNT(1)` 时并不依赖于实际列，因此它也会计算所有行。
- **示例**：
  ```sql
  SELECT COUNT(1) FROM users;
  ```

### 3. COUNT(字段名)

- **定义**：计算指定字段的非 NULL 值的数量。仅对该字段存在值的行进行计数。
- **特点**：
  - 如果字段值为 NULL，则该行不会被计入计数。
  - 适用于希望只计算特定字段有效值的情况。
- **示例**：
  ```sql
  SELECT COUNT(age) FROM users;
  ```

### 总结

| 函数          | 计算的内容                          | NULL 处理      |
|---------------|-------------------------------------|----------------|
| **COUNT(*)**  | 所有行                              | 包括 NULL      |
| **COUNT(1)**  | 所有行                              | 包括 NULL      |
| **COUNT(字段名)** | 指定字段的非 NULL 值的行数      | 排除 NULL      |

### 性能考虑

在性能上，`COUNT(*)` 和 `COUNT(1)` 在 MySQL 中通常没有显著的区别，具体取决于数据库的优化器。不过，一般建议使用 `COUNT(*)` 来计算总行数，因为这是更常见且更具可读性的用法。使用 `COUNT(字段名)` 时，要注意可能会导致结果的不同，因为它仅计数非 NULL 值的行。
