在以下情况下，不推荐为数据库建立索引：

### 1. **小表**

- **表数据量小**：对于数据量非常小的表，建立索引可能不会带来性能提升，反而会增加额外的存储开销和维护成本。小表的全表扫描通常比索引查找要快。

### 2. **频繁更新的表**

- **高更新频率**：如果表中数据频繁更新（如 INSERT、UPDATE、DELETE），索引会导致额外的维护开销。每次更新都需要更新索引，可能会影响性能。

### 3. **低选择性的列**

- **选择性低**：对于选择性非常低的列（例如性别、状态等只包含少数几种值的列），索引的效果不明显，因为几乎所有行都可能被匹配到，导致索引扫描和全表扫描差不多。

### 4. **多列组合索引**

- **组合列不常用**：如果组合索引中的列很少一起出现在查询条件中，索引的使用效果会降低。在这种情况下，单独为每一列建立索引可能更有效。

### 5. **复杂查询**

- **复杂的JOIN或子查询**：在复杂的JOIN或子查询中，索引可能并不总能带来性能提升，特别是当涉及到大量数据时，可能会导致索引失效。

### 6. **临时表或临时数据**

- **临时表**：对于临时表或临时数据，通常不建议建立索引，因为这些表的数据生命周期短，索引的建立和维护会增加不必要的开销。

### 7. **低访问频率的列**

- **很少查询的列**：如果某个列很少被查询，或者查询中几乎不涉及这个列，为其建立索引的收益可能不高。

### 8. **高重复数据的列**

- **重复率高的列**：如果某个列的值高度重复（例如布尔类型列），建立索引可能没有显著的性能提升，甚至会导致性能下降。

### 总结

在考虑为数据库建立索引时，应评估表的大小、更新频率、查询模式和列的选择性等因素。正确的索引策略可以提高查询性能，但不当的索引可能会导致性能下降和存储开销增加。
