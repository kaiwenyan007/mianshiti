在 MySQL 中存储金额数据，推荐使用 `DECIMAL` 或 `NUMERIC` 类型。这两个类型具有以下优点：

### 1. **DECIMAL/NUMERIC**

- **定义**：`DECIMAL` 和 `NUMERIC` 是用于存储定点数的类型，允许你精确控制小数位数和总位数。
- **语法**：可以指定总位数和小数位数，格式为 `DECIMAL(M, D)` 或 `NUMERIC(M, D)`，其中：
  - `M` 是总位数（包括整数部分和小数部分）。
  - `D` 是小数位数。

- **示例**：如果你想存储最多 10 位数字，其中 2 位是小数，可以使用：
  ```sql
  DECIMAL(10, 2)
  ```

### 2. **优点**

- **精确性**：`DECIMAL` 和 `NUMERIC` 类型可以避免浮点数运算中可能出现的精度问题，因此更适合用于存储货币和金融数据。
- **无舍入误差**：与 `FLOAT` 和 `DOUBLE` 类型不同，`DECIMAL` 和 `NUMERIC` 类型在存储金额时不会产生舍入误差。

### 3. **示例使用**

```sql
CREATE TABLE transactions (
    id INT AUTO_INCREMENT PRIMARY KEY,
    amount DECIMAL(10, 2) NOT NULL
);
```

在上述示例中，`amount` 列可以存储金额，范围为 -99999999.99 到 99999999.99，适合处理大多数货币金额。

### 4. **总结**

- 使用 `DECIMAL` 或 `NUMERIC` 类型存储金额数据，以确保精度和正确性，避免浮点数带来的舍入误差。根据具体业务需求选择合适的小数位数和总位数。
