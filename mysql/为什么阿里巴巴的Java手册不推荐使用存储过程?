阿里巴巴的 Java 手册不推荐使用存储过程的原因主要包括以下几点：

### 1. **可维护性**

- **代码分散**：存储过程通常位于数据库中，和应用程序代码分开。这会导致代码的可维护性降低，因为开发者需要在不同的地方查找和更新逻辑，增加了理解和维护的复杂性。

### 2. **版本控制**

- **难以管理**：存储过程的版本管理相对困难，尤其是在大型团队中，可能很难跟踪存储过程的变更。这可能导致不同版本的存储过程在不同环境中的不一致。

### 3. **调试和测试**

- **调试困难**：与应用程序代码相比，存储过程的调试通常更加复杂，缺乏良好的调试工具和环境，增加了排查问题的难度。

### 4. **性能问题**

- **优化难度**：存储过程的性能优化通常比应用层代码更为复杂，尤其是在处理复杂逻辑时。过于依赖存储过程可能会导致性能瓶颈，而不容易被发现和修复。

### 5. **灵活性**

- **适应变化**：业务逻辑的变化较快时，存储过程的修改和部署比应用程序的修改更为复杂。灵活性不足，导致在快速迭代的环境中难以适应变化。

### 6. **跨语言支持**

- **语言耦合**：存储过程通常与特定的数据库管理系统紧密耦合，使得在需要更换数据库或使用不同技术栈时，迁移成本较高。

### 7. **数据库负担**

- **逻辑集中**：将业务逻辑放在数据库中可能导致数据库的负担加重，影响数据库的性能和可扩展性。尤其是在高并发的情况下，数据库可能会成为瓶颈。

### 总结

总的来说，阿里巴巴的 Java 手册不推荐使用存储过程主要是基于可维护性、调试困难、性能优化、灵活性和数据库负担等方面的考虑。推荐将业务逻辑尽可能地放在应用层，保持应用和数据库的分离，从而提高代码的可读性、可维护性和灵活性。
