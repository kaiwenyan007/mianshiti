数据库的三大范式（或规范化）是为了减少数据冗余和提高数据一致性而定义的设计原则。它们分别是：

### 1. 第一范式 (1NF)

- **定义**：要求表中的每个列都必须是原子的（即不可分割的），并且每个列中的值必须是同一类型的。
- **要求**：
  - 每个表格都有一个主键。
  - 每个字段都必须包含单一的值，不能包含重复组或数组。
- **目的**：确保数据结构清晰，避免数据重复。

### 2. 第二范式 (2NF)

- **定义**：在满足第一范式的基础上，要求表中的所有非主键字段必须完全依赖于主键，而不是部分依赖于主键。
- **要求**：
  - 消除部分依赖，即如果主键是复合主键，则每个非主键字段必须依赖于整个主键，而不是仅依赖于主键的一部分。
- **目的**：消除数据冗余，确保每个数据项的完整性和一致性。

### 3. 第三范式 (3NF)

- **定义**：在满足第二范式的基础上，要求表中的非主键字段必须直接依赖于主键，而不能依赖于其他非主键字段。
- **要求**：
  - 消除传递依赖，即如果 A 依赖于 B，B 依赖于 C，则 C 不应依赖于 A。
- **目的**：进一步减少数据冗余，确保数据的独立性和一致性。

### 总结

- **第一范式 (1NF)**：确保数据的原子性，避免重复组。
- **第二范式 (2NF)**：确保非主键字段完全依赖于主键，消除部分依赖。
- **第三范式 (3NF)**：确保非主键字段直接依赖于主键，消除传递依赖。

通过遵循这些范式，可以有效地设计出结构合理、易于维护和扩展的数据库。
